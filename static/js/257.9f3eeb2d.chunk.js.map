{"version":3,"file":"static/js/257.9f3eeb2d.chunk.js","mappings":"gRAGaA,EAAYC,EAAAA,EAAAA,IAAH,yEAMTC,EAAOD,EAAAA,EAAAA,GAAH,2IASJE,EAAWF,EAAAA,EAAAA,GAAH,+JAURG,GAAWH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,sJAWRK,EAASL,EAAAA,EAAAA,OAAH,sS,SCwFnB,EAnHqB,WAAO,IAAD,IACjBM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAEjBC,QAAQC,IAAIH,EAASI,OAIrB,IAAMC,EAAY,oBAAGL,EAASI,aAAZ,aAAG,EAAgBE,YAAnB,QAA2B,UAqB7C,IAnBAC,EAAAA,EAAAA,YAAU,WAENR,GAAW,IAEXS,EAAAA,EAAAA,IAAkBf,GACfgB,MAAK,SAAAC,GACJb,EAAaa,EACd,IACAC,OAAM,SAAAC,GACLV,QAAQC,IAAIS,EACb,IACAC,SAAQ,WACPd,GAAW,EACZ,GAIN,GAAE,CAACN,IAECG,EAAL,CAIA,MAQIA,GAAa,CAAC,EAPhBkB,EADF,EACEA,MACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,OACAC,EANF,EAMEA,YACAC,EAPF,EAOEA,eAiBF,OACE,iCACE,SAAC,KAAD,CAAMC,GAAIhB,EAAV,UACE,SAACb,EAAD,UAAQ,2BAMTM,IAAW,SAACwB,EAAA,EAAD,IAEX1B,IACC,UAACV,EAAD,YACE,gBACEqC,MAAM,QACNC,IACEL,EAAW,yCAC2BA,GAD3B,6EAIbM,IAAKL,KAEP,4BACE,0BACGN,EAAM,KAAGC,EAAaW,MAAM,EAAG,GAAG,QAErC,yBAAG,eAAaV,MAChB,wBAAI,cACJ,uBAAIC,KACJ,wBAAI,YACJ,SAAC7B,EAAD,UACG8B,EAAOS,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,MAAjBD,EAAME,GADA,aAOzB,mBACA,4BACE,wBAAI,4BACJ,UAACzC,EAAD,YACE,yBACE,SAACC,EAAD,CAAU+B,GAAG,OAAb,SAAoB,YAEtB,yBACE,SAAC/B,EAAD,CAAU+B,GAAG,UAAb,SAAuB,kBAG3B,mBACA,SAAC,KAAD,SA5EL,CAgFF,C,mMC3HDU,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,oGACJF,EAAAA,EAAAA,IAAA,qCAAwCC,IADpC,cACrBE,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAKbC,EAAoB,mCAAG,WAAMC,GAAN,uFACXP,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DM,IAFnD,cAC5BJ,EAD4B,yBAI3BA,EAASC,KAAKC,SAJa,2CAAH,sDAOpB5B,EAAiB,mCAAG,WAAMf,GAAN,uFACRsC,EAAAA,EAAAA,IAAA,gBACZtC,EADY,oBACOuC,EADP,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBI,EAAW,mCAAG,WAAM9C,GAAN,uFACFsC,EAAAA,EAAAA,IAAA,gBACZtC,EADY,4BACeuC,EADf,oBADE,cACnBE,EADmB,yBAIlBA,EAASC,KAAKK,MAJI,2CAAH,sDAOXC,EAAY,mCAAG,WAAMhD,GAAN,uFACHsC,EAAAA,EAAAA,IAAA,gBACZtC,EADY,4BACeuC,EADf,2BADG,cACpBE,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/TmbdApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  margin: 24px;\n  gap: 24px;\n`;\n\nexport const List = styled.ul`\n  display: inline-flex;\n  gap: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n`;\n\nexport const ListInfo = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n`;\n\nexport const LinkInfo = styled(Link)`\n  text-decoration: none;\n  font-weight: 600;\n  font-size: 18px;\n  color: #191d1e;\n\n  &:hover {\n    color: tomato;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 8px 8px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 3px solid #191d1e;\n  color: #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n  border-radius: 4px 8px;\n\n  &:hover {\n    color: tomato;\n    border: 3px solid tomato;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams, Outlet, useLocation, Link } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/TmbdApi';\nimport Loader from 'components/Loader/Loader';\nimport {\n  Container,\n  List,\n  ListInfo,\n  LinkInfo,\n  Button,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  console.log(location.state);\n  // const navigate = useNavigate();\n  // const refLocation = useRef(location.state ?? '/');\n  // const backLinkHref = useRef(location.state?.from ?? '/movies');\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    const fetchMovieDetailsFilms = () => {\n      setLoading(true);\n\n      fetchMovieDetails(movieId)\n        .then(detailMovie => {\n          setMovieInfo(detailMovie);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    fetchMovieDetailsFilms();\n  }, [movieId]);\n\n  if (!movieInfo) {\n    return;\n  }\n\n  const {\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n  } = movieInfo || {};\n\n  // const handleClickBackBtn = () => {\n  //   if (location.state && location.state.from) {\n  //       navigate(location.state.from);\n  //   } else {\n  //       navigate('/');\n  //   }\n  // }\n  // const handleClickBackBtn = () => {\n  //   navigate(refLocation.current);\n\n  // };\n\n  // console.log(`current: ${refLocation.current})\n\n  return (\n    <>\n      <Link to={backLinkHref}>\n        <Button>ðŸ¡„ Go back</Button>\n      </Link>\n      {/* <Button onClick={handleClickBackBtn} type=\"button\">\n        Go back\n      </Button> */}\n\n      {loading && <Loader />}\n\n      {movieInfo && (\n        <Container>\n          <img\n            width=\"300px\"\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n            }\n            alt={original_title}\n          />\n          <div>\n            <h1>\n              {title} ({release_date.slice(0, 4)})\n            </h1>\n            <p>User score: {popularity}</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h2>Genres</h2>\n            <List>\n              {genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </List>\n          </div>\n        </Container>\n      )}\n      <hr />\n      <div>\n        <h3>Additional information</h3>\n        <ListInfo>\n          <li>\n            <LinkInfo to=\"cast\">Cast</LinkInfo>\n          </li>\n          <li>\n            <LinkInfo to=\"reviews\">Reviews</LinkInfo>\n          </li>\n        </ListInfo>\n        <hr />\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '992758a4802a699e8df27d4d6efc34fb';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["Container","styled","List","ListInfo","LinkInfo","Link","Button","movieId","useParams","useState","movieInfo","setMovieInfo","loading","setLoading","location","useLocation","console","log","state","backLinkHref","from","useEffect","fetchMovieDetails","then","detailMovie","catch","error","finally","title","release_date","popularity","overview","genres","poster_path","original_title","to","Loader","width","src","alt","slice","map","genre","name","id","axios","API_KEY","fetchTrending","response","data","results","fetchSearchByKeyword","keyword","fetchActors","cast","fetchReviews"],"sourceRoot":""}